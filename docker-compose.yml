version: "3"

services:
  #ssd 
  sshd:
    image: rome314/openssh:latest #OpenSSH image to use, in this case - my own from docker hub
    ports:
      - "23:22" #docker sshd will listen port 23
    volumes:
      - ./sshd-configuration/authorized_keys:/root/.ssh/authorized_keys #file with authorized keys mounting
      - ./sshd-configuration/sshd_config:/etc/ssh/sshd_config #config file mountin
    networks:
      - internal_nw #network to communicate with other containers
      - external_nw #network with internet access

  # Application
  db:
    image: postgres:11.5-alpine #postres image from docker hub
    environment: #env parameters to run hackmd correctly and without pain 
      - POSTGRES_USER=hackmd
      - POSTGRES_PASSWORD=hackmdpass
      - POSTGRES_DB=hackmd
    volumes:
      - database:/var/lib/postgresql/data #to make db working recoverable in case of fail/restart
    networks:
      - internal_nw #acceptable only from internal network
    restart: always 

  hackmd:
    image: hackmdio/hackmd:1.3.1-alpine  # hackmd image from docker hub 
    environment:
      - HMD_DB_URL=postgres://hackmd:hackmdpass@db:5432/hackmd # link where to find db, in our case it's accessable from internal network
    ports:
      - "3000" #which port need to expose for this image, hack md works on port 3000, we don't need to mount this port to machine's port, because app is not accessable from outside anyway
    networks:
      - internal_nw  #acceptable only from internal network
    restart: always
    depends_on:
      - db #don't start application while db is not deployed

networks:
  internal_nw: #internal network without internet access
    internal: true
    driver: bridge
  external_nw: #default network with internet access

volumes:
  database:

